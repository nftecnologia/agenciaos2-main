// OpenAI Configuration with fallbacks for development
export interface OpenAIConfig {
  apiKey?: string
  enabled: boolean
}

export function getOpenAIConfig(): OpenAIConfig {
  const apiKey = process.env.OPENAI_API_KEY
  
  return {
    apiKey,
    enabled: !!apiKey && apiKey.trim() !== '',
  }
}

// Mock responses for development when OpenAI is not available
export const mockResponses = {
  blogIdeas: [
    'Como aumentar vendas usando IA em 2024',
    'Top 10 ferramentas de automa√ß√£o para ag√™ncias',
    'Estrat√©gias de marketing digital que realmente funcionam',
    'Como criar conte√∫do viral para redes sociais',
    'O futuro das ag√™ncias digitais com IA'
  ],
  
  instagramCaption: `üöÄ Transforme sua ag√™ncia com IA!

Descubra como a intelig√™ncia artificial pode revolucionar seus resultados:

‚ú® Automa√ß√£o de processos
üìà An√°lise de dados em tempo real
üéØ Segmenta√ß√£o precisa de p√∫blico
üí∞ ROI otimizado

#IA #MarketingDigital #Agencia #Automacao #Resultados`,

  whatsappScript: `Ol√°! üëã

Espero que esteja tudo bem com voc√™!

Sou [Seu Nome] da [Nome da Ag√™ncia] e tenho uma proposta que pode transformar seus resultados online.

Nossos clientes t√™m alcan√ßado:
‚Ä¢ 150% de aumento em leads
‚Ä¢ 80% de redu√ß√£o em custos
‚Ä¢ 200% de melhoria no ROI

Que tal conversarmos por 15 minutos sobre como podemos ajudar sua empresa?

Quando seria um bom hor√°rio para voc√™? üìÖ`,

  seoOptimization: `# Otimiza√ß√£o SEO Recomendada

## Title Tags
- Mantenha entre 50-60 caracteres
- Inclua palavra-chave principal no in√≠cio
- Use chamadas para a√ß√£o

## Meta Descriptions
- 150-160 caracteres ideais
- Inclua palavra-chave e benef√≠cio
- Crie senso de urg√™ncia

## Headers (H1, H2, H3)
- Use apenas um H1 por p√°gina
- Estruture hierarquicamente
- Inclua palavras-chave relacionadas

## Conte√∫do
- M√≠nimo 300 palavras
- Densidade de palavra-chave 1-2%
- Use sin√¥nimos e varia√ß√µes`,

  funnelStrategy: `# Estrat√©gia de Funil de Vendas

## Topo do Funil (TOFU)
- Conte√∫do educativo
- Posts em blog
- Redes sociais
- SEO org√¢nico

## Meio do Funil (MOFU)
- E-books gratuitos
- Webinars
- Casos de sucesso
- Comparativos

## Fundo do Funil (BOFU)
- Demonstra√ß√µes
- Consultoria gratuita
- Propostas personalizadas
- Depoimentos

## M√©tricas de Acompanhamento
- Taxa de convers√£o por etapa
- Custo por lead (CPL)
- Lifetime Value (LTV)
- ROI do funil`
}

// Simple text generation function with fallback
export async function generateText(prompt: string, type: 'blog' | 'instagram' | 'whatsapp' | 'seo' | 'funnel' = 'blog'): Promise<string> {
  const config = getOpenAIConfig()
  
  if (!config.enabled) {
    // Return mock response based on type
    switch (type) {
      case 'instagram':
        return mockResponses.instagramCaption
      case 'whatsapp':
        return mockResponses.whatsappScript
      case 'seo':
        return mockResponses.seoOptimization
      case 'funnel':
        return mockResponses.funnelStrategy
      default:
        return `# Conte√∫do Gerado

${mockResponses.blogIdeas[Math.floor(Math.random() * mockResponses.blogIdeas.length)]}

Este √© um conte√∫do de exemplo gerado pelo sistema. Para obter conte√∫do personalizado com IA, configure sua chave da OpenAI nas vari√°veis de ambiente.

## Benef√≠cios da IA para Ag√™ncias

- Automa√ß√£o de processos repetitivos
- Gera√ß√£o de conte√∫do personalizado
- An√°lise de dados em tempo real
- Otimiza√ß√£o de campanhas

Configure a vari√°vel OPENAI_API_KEY para ativar a gera√ß√£o de conte√∫do com IA real.`
    }
  }

  // Here would be the actual OpenAI integration when API key is available
  try {
    // Placeholder for actual OpenAI call
    // const openai = new OpenAI({ apiKey: config.apiKey })
    // const response = await openai.chat.completions.create({...})
    
    // For now, return enhanced mock response
    return `# Conte√∫do Gerado com IA

Baseado no prompt: "${prompt}"

${mockResponses.blogIdeas[Math.floor(Math.random() * mockResponses.blogIdeas.length)]}

[Este conte√∫do seria gerado pela OpenAI quando a API key estiver configurada]`
    
  } catch (error) {
    console.error('Erro na gera√ß√£o de conte√∫do:', error)
    return mockResponses[type === 'instagram' ? 'instagramCaption' : 'blogIdeas'][0] || 'Erro ao gerar conte√∫do'
  }
}

// Usage tracking for AI features
export async function trackAIUsage(agencyId: string, agentType: string, tokensUsed: number = 100, cost: number = 0.001) {
  // This would integrate with the AIUsage table when needed
  console.log(`AI Usage: Agency ${agencyId}, Agent ${agentType}, Tokens: ${tokensUsed}, Cost: $${cost}`)
}